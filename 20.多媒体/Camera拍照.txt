camera拍照。


camera拍照使用，需要配合SurfaceView 使用。

使用步骤：
1.在Manifest.xml声明 使用相机权限。
<uses-permission android:name="android.permission.CAMERA" />

2.获取SurfaceHolder 并添加拍照回调 并 设置
SurfaceHolder holder = getHolder();                    // 获取SurfaceHolder	
holder.addCallback(new MySurfaceViewCallback());	// 加入回调
		
holder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);	// 设置缓冲类型
		
holder.setFixedSize(500, 350);	                     // 设置分辨率

3.实例化拍照回调类	
// 接口SurfaceHolder.Callback被用来接收摄像头预览界面变化的信息。
	
private class MySurfaceViewCallback implements SurfaceHolder.Callback {
   public void surfaceChanged(SurfaceHolder arg0, int arg1, int arg2, int arg3) {}
   public void surfaceCreated(SurfaceHolder arg0) {
      camera = Camera.open(0);//摄像头打开 根据不同硬件填入参数（有些也不用填） 会有1~2s的阻塞时间
      Camera.Parameters parameters = camera.getParameters(); //定义摄像头参数变量
      parameters.setPreviewSize(200, 160); //设置预览大小
      parameters.setPictureSize(400, 320);  //尺寸像素	
      param.setPreviewFrameRate(5); 	// 每秒显示5帧的数据
      camera.setParameters(parameters);      //设置参数
      camera.setPreviewDisplay(holder);     //预览显示
      camera.startPreview();//开始预览 会有3~4s的阻塞时间
   }
   public void surfaceDestroyed(SurfaceHolder arg0) {
		camera.stopPreview();   
		camera.release();
		camera = null;
    }
}

4.实例化一个照片回调类
private PictureCallback jpgcall = new PictureCallback() {

	public void onPictureTaken(byte[] data, Camera camera) {
            //详细处理 保存照片流 到文件
         }
}


5.在外部调用执行拍照：
camera.takePicture(sc, pc, jpgcall);	 //第一个参数为shutterCallback拍照成功响声 null时没有声音

6.声音 图片处理
	private ShutterCallback sc = new ShutterCallback() {


		public void onShutter() {
	
		// 按下快门后的回调函数
		
}

	};
	
private PictureCallback pc = new PictureCallback() {

	
	public void onPictureTaken(byte[] arg0, Camera arg1) {
		
	// 保存的源图片数据
		
}
	};
