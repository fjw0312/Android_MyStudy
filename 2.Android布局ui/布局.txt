由于图片无法自适应比例布局。特别是wrap_layout 时图片会原比例大小呈现，这就破坏了，布局。
故，使用控件图片背景时，要考虑图片的实际大小，常用做法是根据不同分辨率，在不同文件夹放不同大小的图片：

drawable-ldpi 320*240    120dpi     1dp=0.75px
drawable-mdpi 480*320    160dpi     1dp=1px             1sp =1px    48px
drawable-hdpi 480*800    240dpi     1dp=1.5px                       72px                  
drawable-xhdpi 720*1280   320dpi    1dp=2px                         96px
drawable-xxhdpi 1080*1920  480dpi   1dp=3px                         144px
drawable-xxxhdpi 1080+

hdpi:xhdpi:xxhdpi = 4:6:9  边长比例   更大比例：8:12:16:27  
------------------------------------------------------------
《android常用设计尺寸》
1.一般图标设计将48dp 为可触摸UI原件的标准，这是一个用户能手指准确舒适触摸的最小值。
48dp=72px=18sp
2.界面默认list的高度是 48dp=72px
3.每个元素之间的最小间距8dp=12px
4.默认Button高度40dp=60px
----------------------------
720*1280 px的安卓设计界面 对应的启动图标尺寸是 96px*96px  圆角约等于18px       》》480*800 72px*72px

1080*1920px的安卓界面设计 对应的启动图标尺寸是144px  144px   圆角约等于25px

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
DrawerLayout 抽屉布局：

<?xml version="1.0" encoding="utf-8"?>
<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:id="@+id/drawerLayout"
    android:layout_width="match_parent"
    android:layout_height="match_parent" >

    //主要内容显示部分 主要常用于配合显示碎片
    <FrameLayout
        android:id="@+id/frame_content"
        android:layout_width="match_parent"
        android:layout_height="match_parent" >
    </FrameLayout>

    <!-- android:layout_gravity="start" -->

    //正真抽屉部分
    <LinearLayout
        android:id="@+id/menuLayout"
        android:layout_width="200dp"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        android:background="@color/menu_layout_bg"
        android:clickable="false"
        android:orientation="vertical"
        android:padding="10dp" >
            <TextView
                android:id="@+id/userName"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_alignTop="@id/userImg"
                android:layout_margin="10dp"
                android:layout_toRightOf="@id/userImg"
                android:text="@string/unLogin"
                android:textSize="20sp" />
        </LinearLayout>
</android.support.v4.widget.DrawerLayout>



修改标题栏，自定义标题栏内容：
ActionBar actionBar = getActionBar();
actionBar.setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM);//使能自定义
actionBar.setCustomView(R.layout.actionbar_layout);       //设置自定义布局
actionBar.setDisplayShowCustomEnabled(true);

api23之后推荐使用Activity extends AppCompatActivity 
其是来取代ActionBarActivity 更方便引入使用ToolBar.