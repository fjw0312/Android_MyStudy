android 自定义控件

创建自定义的控件 常用3种方式：
1.继承现有控件来自定义：主要当实现的控件和已知的控件很多方面类似，通过对已有的控件的拓展满足需求。
2.通过继承一个布局文件来自定义，一般来说可以做组合控件时可以实现。
   此时不用OnDraw()方法，在构造广告中通过inflater加载自定义的控件布局，再addView，自定义控件就加载好了。
3.通过继承View类/viewGroup类 来实现自定义控件，使用GDI绘制组件界面:一般上述2种方法都无法实现时。

1.继承现有控件，对其控件进行拓展
2.通过组合多个控件布局，进行自定义成一个控件。
3.通过继承view/viewGroup 重写控件。



代码中：
Matrix 类，可以实现对图片的变化操作。
LinearGradient 线性渲染器，可以实现彩虹变换

----------------------自定义控件：继承现有控件，对现有控件拓展--------------------------------
public class NewView01 extends TextView{
	protected void onDraw(Canvas canvas) {
		// TODO Auto-generated method stub
		canvas.drawColor(Color.YELLOW); //设置底板颜色  应该在原生控件 前
		int width = getWidth(); 
		int height = getHeight();

		getPaint().setShader(linearGradient);  //将 父类的画笔  添加渲染器
		super.onDraw(canvas); 
		

		RectF recf = new RectF(0.0f,0.0f,(float)width,(float)height);
		canvas.drawRoundRect(recf, width/4.0f, height/4.0f, mPaint); 
		
		mTranslate += 20;
		if(mTranslate > width) mTranslate = 0;		
		mMatrix.setTranslate(mTranslate, 0);  //设置平移 
		linearGradient.setLocalMatrix(mMatrix); //设置渲染器平移
		postInvalidateDelayed(300);   //延时200ms    再次刷新ui  进入onDraw()
		Log.i("NewView01>onDraw","into -2"); 
	}
}